@model DesignUrFixie.Models.Bike

@{
    ViewBag.Title = "Create";
}
    <!--  Azure  -->
    <!--  THE IMAGE   -->
<section class="CreateHeight">
    <div class="col-sm-12">
        <div id="GreyBike">
            <img src="~/Content/Images/GreyBike.png" class="img-responsive">
        </div>
        <div>
            <div id="FrameImage">
            </div>
            <div id="SaddleImage">
            </div>
            <div id="HandlebarImage">
            </div>
            <div id="WheelsImage">
            </div>
        </div>
    </div>


   
    <div class="container" id="FormButton">
        <!--  THE BUTTONS   -->

        <div class="row">
            <h3>  Click on Ur colours</h3>
            <div class="col-sm-3">
                <div id="FrameColor">
                    <p><b>FRAME</b> Colour</p>   <!-- Based on which button you select, a parameter with string of colour is passed into setFrame()-->
                    <p>
                        <input type='button' class="button BF" onclick="setFrame('Black')"> <!-- button BF is Black Coloured Button-->
                        <input type='button' class="button RF" onclick="setFrame('Red')">   <!-- button BF is Red Coloured Button-->
                        <input type='button' class="button GF" onclick="setFrame('Green')"> <!-- button BF is Freen Coloured Button-->
                    </p>
                </div>
            </div>

            <div class="col-sm-3">
                <div id="SaddleColor">
                    <p><b>SADDLE</b> Colour</p>
                    <p>
                        <input type='button' class="button BF" onclick="setSaddle('Black')">
                        <input type='button' class="button RF" onclick="setSaddle('Red')">
                        <input type='button' class="button GF" onclick="setSaddle('Green')">
                    </p>
                </div>
            </div>
            <div class="col-sm-3">
                <div id="HandlebarColor">
                    <p><b>HANDLEBAR</b> Colour</p>
                    <p>
                        <input type='button' class="button BF" onclick="setHandlebar('Black')">
                        <input type='button' class="button RF" onclick="setHandlebar('Red')">
                        <input type='button' class="button GF" onclick="setHandlebar('Green')">
                    </p>
                </div>
            </div>
            <div class="col-sm-3">
                <div id="WheelsColor">
                    <p><b>WHEELS</b> Colour</p>
                    <p>
                        <input type='button' class="button BF" onclick="setWheels('Black')">
                        <input type='button' class="button RF" onclick="setWheels('Red')">
                        <input type='button' class="button GF" onclick="setWheels('Green')">
                    </p>
                </div>
            </div>

        </div>

        <!--  THE FORM   -->
        <div class="col-sm-8" id="Bform">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal"> <!-- Create Bike Form, takes the string from the input buttons above-->

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.BikeName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.BikeName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BikeName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FrameColour, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6" id="FC">
                            @Html.EditorFor(model => model.FrameColour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FrameColour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SaddleColour, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.SaddleColour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SaddleColour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HandlebarColour, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.HandlebarColour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HandlebarColour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.WheelColour, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.WheelColour, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WheelColour, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">        <!-- Create Bike Button -->
                        <div class="col-md-offset-6 col-md-6">
                            <input type="submit" value="Create Bike" class="btn btn-default" />
                            
                            <br />
                        </div>
                    </div>
                </div>
            }
            <div class="col-md-offset-6 col-md-6">
                @Html.ActionLink("Back to List", "Index")
            </div>
            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

        </div>



    </div><!-- container div end -->
</section>





